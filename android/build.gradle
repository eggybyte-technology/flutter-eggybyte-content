group = "com.eggybyte.content"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "2.1.21"
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:8.10.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        maven { url = uri("https://artifact.bytedance.com/repository/Volcengine/") }
        maven { url = uri("https://artifact.bytedance.com/repository/pangle/") }
    }
}

configurations.all {
    resolutionStrategy {
        force("androidx.constraintlayout:constraintlayout:1.1.2")
        force("com.squareup.okhttp3:okhttp:4.12.0")
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.eggybyte.content"
    compileSdk = 36
    ndkVersion = "28.0.13004108"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_21
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 26
    }

    dependencies {
        testImplementation("org.jetbrains.kotlin:kotlin-test")
        testImplementation("org.mockito:mockito-core:5.17.0")
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "androidx.core:core-ktx:1.16.0"
        implementation "androidx.appcompat:appcompat:1.7.0"
        implementation "androidx.recyclerview:recyclerview:1.4.0"
        implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

        implementation "com.eggybyte:kssdk:1.0.0"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}